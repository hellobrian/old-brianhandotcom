---
interface Props {
  variant: "menu" | "close" | "accent";
}
const { variant } = Astro.props;
---

<button
  data-variant={variant}
  class:list={["button-reset", `${variant}`]}
  type="button"
  id="button"><slot /></button
>
<style>
  [data-variant="menu"] {
    background-color: var(--black);
    border: 1px solid var(--gray);
    color: var(--white);
    font-family: var(--tanker);
    font-size: var(--step-2);
    padding: 0 var(--space-s);
    transition: border ease 200ms;
  }

  [data-variant="menu"]:hover {
    border-color: var(--white);
  }

  [data-variant="accent"] {
    background-color: transparent;
    border: 1px solid var(--accent);
    color: var(--accent);
    font-family: var(--tanker);
    font-size: var(--step-2);
    padding: 0 var(--space-s);
    transition: border ease 200ms;
  }

  [data-variant="close"] {
    all: unset;
    color: var(--black);
    font-family: var(--tanker);
    border: 1px solid var(--gray);
    font-size: var(--step-2);
    padding: 0 var(--space-s);
    transition: border ease 200ms;
  }

  [data-variant="close"]:hover {
    background-color: var(--black);
    color: var(--white);
  }
</style>
<!-- <script>
  const button = document.getElementById("button") as HTMLElement;
  let initialVariant = button.dataset.variant;

  const changeButtonVariant = () => {
    const currentScrollPos = window.pageYOffset;
    const isNearTop = currentScrollPos < 150;

    button.dataset.variant = isNearTop ? initialVariant : "accent";
  };

  window.addEventListener("scroll", changeButtonVariant);
</script> -->
