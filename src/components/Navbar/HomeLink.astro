---
interface Props {
  variant: "header" | "navigation-menu" | "accent";
}

const { variant } = Astro.props;
const underlineColor =
  variant !== "navigation-menu" ? "var(--white)" : "var(--black)";
---

<h1 data-variant={variant}><a href="/">Brian Han</a></h1>

<style define:vars={{ underlineColor }}>
  h1 {
    font-weight: 400;
    font-size: var(--step-4);
    font-family: var(--tanker);
  }

  h1[data-variant="header"] {
    color: var(--local-color);
  }

  h1[data-variant="navigation-menu"] {
    color: var(--black);
  }

  a {
    color: currentColor;
    text-decoration-color: var(--underlineColor);
    text-underline-offset: 4px;
    pointer-events: auto;
  }

  a:is(:hover, :focus) {
    text-decoration-color: var(--accent);
  }
</style>
<script>
  const homeLink = document.querySelector(
    "[data-variant='header']"
  ) as HTMLElement;

  const changeHomeLinkColor = () => {
    const currentScrollPos = window.pageYOffset;
    const isNearTop = currentScrollPos < 150;

    homeLink.style.setProperty(
      "--local-color",
      isNearTop === true ? "var(--white)" : "var(--accent)"
    );
  };

  window.addEventListener("scroll", changeHomeLinkColor);
</script>
